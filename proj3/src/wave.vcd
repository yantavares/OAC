$date
  Sun Nov 26 17:01:39 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module testbench_immediategenerator $end
$var reg 32 ! test_instruction[31:0] $end
$var reg 32 " test_immediate[31:0] $end
$scope module uut $end
$var reg 32 # instruction[31:0] $end
$var reg 32 $ immediate[31:0] $end
$var reg 32 % i[31:0] $end
$var reg 32 & s[31:0] $end
$var reg 32 ' sb[31:0] $end
$var reg 32 ( u[31:0] $end
$var reg 32 ) uj[31:0] $end
$var reg 32 * r[31:0] $end
$comment instrtype is not handled $end
$var reg 8 + opcode[7:0] $end
$var reg 3 , funct3[2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000001010110011 !
b00000000000000000000000000000000 "
b00000000000000000000001010110011 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000101 &
b00000000000000000000100000000100 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00110011 +
b000 ,
#10000000
b00000001000000000010001010000011 !
b00000000000000000000000000010000 "
b00000001000000000010001010000011 #
b00000000000000000000000000010000 $
b00000000000000000000000000010000 %
b00000001000000000010000000000000 (
b00000000000000000010000000010000 )
b00000011 +
b010 ,
#20000000
b11111001110000000000001100010011 !
b11111111111111111111111110011100 "
b11111001110000000000001100010011 #
b11111111111111111111111110011100 $
b11111111111111111111111110011100 %
b11111111111111111111111110000110 &
b11111111111111111111011110000110 '
b11111001110000000000000000000000 (
b11111111111100000000011110011100 )
b00010011 +
b000 ,
#30000000
b11111111111100101100001010010011 !
b11111111111111111111111111111111 "
b11111111111100101100001010010011 #
b11111111111111111111111111111111 $
b11111111111111111111111111111111 %
b11111111111111111111111111100101 &
b11111111111111111111111111100100 '
b11111111111100101100000000000000 (
b11111111111100101100111111111110 )
b100 ,
#40000000
b00010110001000000000001100010011 !
b00000000000000000000000101100010 "
b00010110001000000000001100010011 #
b00000000000000000000000101100010 $
b00000000000000000000000101100010 %
b00000000000000000000000101100110 &
b00000000000000000000000101100110 '
b00010110001000000000000000000000 (
b00000000000000000000000101100010 )
b000 ,
#50000000
b00000001100000000000000001100111 !
b00000000000000000000000000011000 "
b00000001100000000000000001100111 #
b00000000000000000000000000011000 $
b00000000000000000000000000011000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000001100000000000000000000000 (
b00000000000000000000000000011000 )
b01100111 +
#60000000
b00000000000000000010010000110111 !
b00000000000000000010000000000000 "
b00000000000000000010010000110111 #
b00000000000000000010000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000001000 &
b00000000000000000000000000001000 '
b00000000000000000010000000000000 (
b00000000000000000010000000000000 )
b00110111 +
b010 ,
#70000000
b00000010010101000010111000100011 !
b00000000000000000000000000111100 "
b00000010010101000010111000100011 #
b00000000000000000000000000111100 $
b00000000000000000000000000100101 %
b00000000000000000000000000111100 &
b00000000000000000000000000111100 '
b00000010010101000010000000000000 (
b00000000000001000010100000100100 )
b00100011 +
#80000000
b11111110010100101001000011100011 !
b11111111111111111111111111100000 "
b11111110010100101001000011100011 #
b11111111111111111111111111100000 $
b11111111111111111111111111100101 %
b11111111111111111111111111100001 &
b11111111111111111111111111100000 '
b11111110010100101001000000000000 (
b11111111111100101001111111100100 )
b01100011 +
b001 ,
#90000000
b00000000110000000000000011101111 !
b00000000000000000000000000001100 "
b00000000110000000000000011101111 #
b00000000000000000000000000001100 $
b00000000000000000000000000001100 %
b00000000000000000000000000000001 &
b00000000000000000000100000000000 '
b00000000110000000000000000000000 (
b00000000000000000000000000001100 )
b01101111 +
b000 ,
#100000000
